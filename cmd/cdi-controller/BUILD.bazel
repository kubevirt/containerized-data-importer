load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["controller.go"],
    importpath = "kubevirt.io/containerized-data-importer/cmd/cdi-controller",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/common:go_default_library",
        "//pkg/controller:go_default_library",
        "//pkg/controller/datavolume:go_default_library",
        "//pkg/controller/populators:go_default_library",
        "//pkg/controller/transfer:go_default_library",
        "//pkg/monitoring/metrics/cdi-controller:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/cert:go_default_library",
        "//pkg/util/cert/fetcher:go_default_library",
        "//pkg/util/cert/generator:go_default_library",
        "//staging/src/kubevirt.io/containerized-data-importer-api/pkg/apis/core/v1beta1:go_default_library",
        "//staging/src/kubevirt.io/containerized-data-importer-api/pkg/apis/forklift/v1beta1:go_default_library",
        "//vendor/github.com/kelseyhightower/envconfig:go_default_library",
        "//vendor/github.com/kubernetes-csi/external-snapshotter/client/v6/apis/volumesnapshot/v1:go_default_library",
        "//vendor/github.com/openshift/api/config/v1:go_default_library",
        "//vendor/github.com/openshift/api/image/v1:go_default_library",
        "//vendor/github.com/openshift/api/route/v1:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/go.uber.org/zap/zapcore:go_default_library",
        "//vendor/k8s.io/api/batch/v1:go_default_library",
        "//vendor/k8s.io/api/networking/v1:go_default_library",
        "//vendor/k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/meta:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/fields:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/scheme:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/klog/v2:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/cache:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/client/config:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/log:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/log/zap:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager:go_default_library",
        "//vendor/sigs.k8s.io/controller-runtime/pkg/manager/signals:go_default_library",
    ],
)

go_binary(
    name = "cdi-controller",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
)

container_image(
    name = "cdi-controller-image",
    architecture = select({
        "@io_bazel_rules_go//go/platform:linux_arm64": "arm64",
        "//conditions:default": "amd64",
    }),
    base = "//:centos_base",
    directory = "/usr/bin",
    entrypoint = [
        "/usr/bin/cdi-controller",
        "-alsologtostderr",
    ],
    files = [":cdi-controller"],
    user = "1001",
    visibility = ["//visibility:public"],
    workdir = "/home/cdi-controller",
)
