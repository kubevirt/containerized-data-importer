load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_container_rpm//rpm:rpm.bzl", "rpm_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

rpm_image(
    name = "cdi-cloner-base-image",
    base = "@fedora//image",
    rpms = [
        "@tar//file",
    ],
)

go_library(
    name = "go_default_library",
    srcs = ["clone-source.go"],
    importpath = "kubevirt.io/containerized-data-importer/cmd/cdi-cloner",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/common:go_default_library",
        "//pkg/util:go_default_library",
        "//pkg/util/prometheus:go_default_library",
        "//vendor/github.com/golang/snappy:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/k8s.io/klog/v2:go_default_library",
    ],
)

go_binary(
    name = "cdi-cloner",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "clone-source_suite_test.go",
        "clone-source_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/util/prometheus:go_default_library",
        "//tests/reporters:go_default_library",
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
    ],
)

container_image(
    name = "cdi-cloner-image",
    base = ":cdi-cloner-base-image",
    directory = "/usr/bin",
    entrypoint = ["/usr/bin/cloner_startup.sh"],
    files = [":cdi-cloner"],
    tars = [":startup-script-tar"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "startup-script",
    srcs = [
        ":cloner_startup.sh",
    ],
)

pkg_tar(
    name = "startup-script-tar",
    srcs = [":startup-script"],
    mode = "755",
)
