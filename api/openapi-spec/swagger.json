{
  "swagger": "2.0",
  "info": {
   "description": "Containerized Data Importer for KubeVirt.",
   "title": "KubeVirt Containerized Data Importer API",
   "contact": {
    "name": "kubevirt-dev",
    "url": "https://github.com/kubevirt/containerized-data-importer",
    "email": "kubevirt-dev@googlegroups.com"
   },
   "license": {
    "name": "Apache 2.0",
    "url": "https://www.apache.org/licenses/LICENSE-2.0"
   }
  },
  "paths": {
   "/": {
    "get": {
     "description": "Get a CDI API root paths",
     "produces": [
      "application/json"
     ],
     "operationId": "getUploadRootPaths",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.RootPaths"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis": {
    "get": {
     "description": "Get a CDI API GroupList",
     "produces": [
      "application/json"
     ],
     "operationId": "getUploadAPIs",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroupList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/": {
    "get": {
     "description": "Get a KubeVirt CDI API group",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIGroup-cdi.kubevirt.io",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/v1beta1/": {
    "get": {
     "description": "Get KubeVirt API Resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-cdi.kubevirt.io-v1beta1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/v1beta1/cdiconfigs": {
    "get": {
     "description": "Get a list of all CDIConfig objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listCDIConfigForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfigList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/cdis": {
    "get": {
     "description": "Get a list of all CDI objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listCDIForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/datavolumes": {
    "get": {
     "description": "Get a list of all DataVolume objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listDataVolumeForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolumeList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdiconfigs": {
    "get": {
     "description": "Get a list of CDIConfig objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedCDIConfig",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfigList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a CDIConfig object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedCDIConfig",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of CDIConfig objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedCDIConfig",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdiconfigs/{name:[a-z0-9][a-z0-9\\-]*}": {
    "get": {
     "description": "Get a CDIConfig object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedCDIConfig",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a CDIConfig object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedCDIConfig",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a CDIConfig object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedCDIConfig",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a CDIConfig object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedCDIConfig",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIConfig"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdis": {
    "get": {
     "description": "Get a list of CDI objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedCDI",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDIList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a CDI object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedCDI",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of CDI objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedCDI",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdis/{name:[a-z0-9][a-z0-9\\-]*}": {
    "get": {
     "description": "Get a CDI object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedCDI",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a CDI object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedCDI",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a CDI object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedCDI",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a CDI object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedCDI",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.CDI"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes": {
    "get": {
     "description": "Get a list of DataVolume objects.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "listNamespacedDataVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolumeList"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "post": {
     "description": "Create a DataVolume object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "createNamespacedDataVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Object name and auth scope, such as for teams and projects",
       "name": "namespace",
       "in": "path",
       "required": true
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a collection of DataVolume objects.",
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteCollectionNamespacedDataVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
       "name": "continue",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
       "name": "limit",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "TimeoutSeconds for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes/{name:[a-z0-9][a-z0-9\\-]*}": {
    "get": {
     "description": "Get a DataVolume object.",
     "produces": [
      "application/json",
      "application/yaml",
      "application/json;stream=watch"
     ],
     "operationId": "readNamespacedDataVolume",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact. Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported. Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "put": {
     "description": "Update a DataVolume object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "replaceNamespacedDataVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "201": {
       "description": "Create",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "delete": {
     "description": "Delete a DataVolume object.",
     "consumes": [
      "application/json",
      "application/yaml"
     ],
     "produces": [
      "application/json",
      "application/yaml"
     ],
     "operationId": "deleteNamespacedDataVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "patch": {
     "description": "Patch a DataVolume object.",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "patchNamespacedDataVolume",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.DataVolume"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Name of the resource",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/cdiconfigs": {
    "get": {
     "description": "Watch a CDIConfigList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchCDIConfigListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/cdis": {
    "get": {
     "description": "Watch a CDIList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchCDIListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/datavolumes": {
    "get": {
     "description": "Watch a DataVolumeList object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchDataVolumeListForAllNamespaces",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdiconfigs": {
    "get": {
     "description": "Watch a CDIConfig object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedCDIConfig",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/cdis": {
    "get": {
     "description": "Watch a CDI object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedCDI",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/cdi.kubevirt.io/v1beta1/watch/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/datavolumes": {
    "get": {
     "description": "Watch a DataVolume object.",
     "produces": [
      "application/json"
     ],
     "operationId": "watchNamespacedDataVolume",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.WatchEvent"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",
      "name": "continue",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
      "name": "fieldSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "If true, partially initialized resources are included in the response.",
      "name": "includeUninitialized",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything",
      "name": "labelSelector",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",
      "name": "limit",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
      "name": "resourceVersion",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "integer",
      "description": "TimeoutSeconds for the list/watch call.",
      "name": "timeoutSeconds",
      "in": "query"
     },
     {
      "uniqueItems": true,
      "type": "boolean",
      "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
      "name": "watch",
      "in": "query"
     }
    ]
   },
   "/apis/upload.cdi.kubevirt.io": {
    "get": {
     "description": "Get a CDI API Group",
     "produces": [
      "application/json"
     ],
     "operationId": "getUploadAPIGroup",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIGroup"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/upload.cdi.kubevirt.io/v1alpha1/": {
    "get": {
     "description": "Get a CDI API resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-v1alpha1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/upload.cdi.kubevirt.io/v1alpha1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/uploadtokenrequests": {
    "post": {
     "description": "Create an UploadTokenRequest object.",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "createNamespacedUploadTokenRequest-v1alpha1",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/apis/upload.cdi.kubevirt.io/v1beta1/": {
    "get": {
     "description": "Get a CDI API resources",
     "produces": [
      "application/json"
     ],
     "operationId": "getAPIResources-v1beta1",
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1.APIResourceList"
       }
      },
      "401": {
       "description": "Unauthorized"
      },
      "404": {
       "description": "Not Found",
       "schema": {
        "type": "string"
       }
      }
     }
    }
   },
   "/apis/upload.cdi.kubevirt.io/v1beta1/namespaces/{namespace:[a-z0-9][a-z0-9\\-]*}/uploadtokenrequests": {
    "post": {
     "description": "Create an UploadTokenRequest object.",
     "consumes": [
      "application/json"
     ],
     "produces": [
      "application/json"
     ],
     "operationId": "createNamespacedUploadTokenRequest-v1beta1",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "201": {
       "description": "Created",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "202": {
       "description": "Accepted",
       "schema": {
        "$ref": "#/definitions/v1beta1.UploadTokenRequest"
       }
      },
      "401": {
       "description": "Unauthorized",
       "schema": {
        "type": "string"
       }
      }
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "Object name and auth scope, such as for teams and projects",
      "name": "namespace",
      "in": "path",
      "required": true
     }
    ]
   },
   "/healthz": {
    "get": {
     "operationId": "healthzHandler",
     "responses": {
      "401": {
       "description": "Unauthorized"
      }
     }
    }
   }
  },
  "definitions": {
   "resource.Quantity": {
    "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n  (Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
    "type": "string"
   },
   "runtime.RawExtension": {
    "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.Object `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// External package: type MyAPIObject struct {\n\truntime.TypeMeta `json:\",inline\"`\n\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n} type PluginA struct {\n\tAOption string `json:\"aOption\"`\n}\n\n// On the wire, the JSON will look something like this: {\n\t\"kind\":\"MyAPIObject\",\n\t\"apiVersion\":\"v1\",\n\t\"myPlugin\": {\n\t\t\"kind\":\"PluginA\",\n\t\t\"aOption\":\"foo\",\n\t},\n}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
    "type": "object"
   },
   "v1.APIGroup": {
    "description": "APIGroup contains the name, the supported versions, and the preferred version of a group.",
    "type": "object",
    "required": [
     "name",
     "versions"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "name is the name of the group.",
      "type": "string"
     },
     "preferredVersion": {
      "description": "preferredVersion is the version preferred by the API server, which probably is the storage version.",
      "$ref": "#/definitions/v1.GroupVersionForDiscovery"
     },
     "serverAddressByClientCIDRs": {
      "description": "a map of client CIDR to server address that is serving this group. This is to help clients reach servers in the most network-efficient way possible. Clients can use the appropriate server address as per the CIDR that they match. In case of multiple matches, clients should use the longest matching CIDR. The server returns only those CIDRs that it thinks that the client can match. For example: the master will return an internal IP CIDR only, if the client reaches the server using an internal IP. Server looks at X-Forwarded-For header or X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ServerAddressByClientCIDR"
      }
     },
     "versions": {
      "description": "versions are the versions supported in this group.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.GroupVersionForDiscovery"
      }
     }
    }
   },
   "v1.APIGroupList": {
    "description": "APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.",
    "type": "object",
    "required": [
     "groups"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "groups": {
      "description": "groups is a list of APIGroup.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.APIGroup"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     }
    }
   },
   "v1.APIResource": {
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "type": "object",
    "required": [
     "name",
     "singularName",
     "namespaced",
     "kind",
     "verbs"
    ],
    "properties": {
     "categories": {
      "description": "categories is a list of the grouped resources this resource belongs to (e.g. 'all')",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "group": {
      "description": "group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".",
      "type": "string"
     },
     "kind": {
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')",
      "type": "string"
     },
     "name": {
      "description": "name is the plural name of the resource.",
      "type": "string"
     },
     "namespaced": {
      "description": "namespaced indicates if a resource is namespaced or not.",
      "type": "boolean"
     },
     "shortNames": {
      "description": "shortNames is a list of suggested short names of the resource.",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "singularName": {
      "description": "singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.",
      "type": "string"
     },
     "storageVersionHash": {
      "description": "The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.",
      "type": "string"
     },
     "verbs": {
      "description": "verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "version": {
      "description": "version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".",
      "type": "string"
     }
    }
   },
   "v1.APIResourceList": {
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "type": "object",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "groupVersion": {
      "description": "groupVersion is the group and version this APIResourceList is for.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "resources": {
      "description": "resources contains the name of the resources and if they are namespaced.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.APIResource"
      }
     }
    }
   },
   "v1.Condition": {
    "description": "Condition represents the state of the operator's reconciliation functionality.",
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastHeartbeatTime": {
      "$ref": "#/definitions/v1.Time"
     },
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ]
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ]
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.DeleteOptions": {
    "description": "DeleteOptions may be provided when deleting an API object.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "dryRun": {
      "description": "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "gracePeriodSeconds": {
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
      "type": "integer",
      "format": "int64"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "orphanDependents": {
      "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
      "type": "boolean"
     },
     "preconditions": {
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned.",
      "$ref": "#/definitions/v1.Preconditions"
     },
     "propagationPolicy": {
      "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground.",
      "type": "string"
     }
    }
   },
   "v1.FieldsV1": {
    "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
    "type": "object"
   },
   "v1.GroupVersionForDiscovery": {
    "description": "GroupVersion contains the \"group/version\" and \"version\" string of a version. It is made a struct to keep extensibility.",
    "type": "object",
    "required": [
     "groupVersion",
     "version"
    ],
    "properties": {
     "groupVersion": {
      "description": "groupVersion specifies the API group and version in the form \"group/version\"",
      "type": "string"
     },
     "version": {
      "description": "version specifies the version in the form of \"version\". This is to save the clients the trouble of splitting the GroupVersion.",
      "type": "string"
     }
    }
   },
   "v1.LabelSelector": {
    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
    "type": "object",
    "properties": {
     "matchExpressions": {
      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.LabelSelectorRequirement"
      }
     },
     "matchLabels": {
      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     }
    }
   },
   "v1.LabelSelectorRequirement": {
    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
    "type": "object",
    "required": [
     "key",
     "operator"
    ],
    "properties": {
     "key": {
      "description": "key is the label key that the selector applies to.",
      "type": "string",
      "x-kubernetes-patch-merge-key": "key",
      "x-kubernetes-patch-strategy": "merge"
     },
     "operator": {
      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
      "type": "string"
     },
     "values": {
      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.ListMeta": {
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "type": "object",
    "properties": {
     "continue": {
      "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
      "type": "string"
     },
     "remainingItemCount": {
      "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
      "type": "integer",
      "format": "int64"
     },
     "resourceVersion": {
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
      "type": "string"
     }
    }
   },
   "v1.ManagedFieldsEntry": {
    "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
      "type": "string"
     },
     "fieldsType": {
      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
      "type": "string"
     },
     "fieldsV1": {
      "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
      "$ref": "#/definitions/v1.FieldsV1"
     },
     "manager": {
      "description": "Manager is an identifier of the workflow managing these fields.",
      "type": "string"
     },
     "operation": {
      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
      "type": "string"
     },
     "time": {
      "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
      "$ref": "#/definitions/v1.Time"
     }
    }
   },
   "v1.ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "type": "object",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "clusterName": {
      "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
      "type": "string"
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "type": [
       "string",
       "null"
      ]
     },
     "deletionGracePeriodSeconds": {
      "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "deletionTimestamp": {
      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "#/definitions/v1.Time"
     },
     "finalizers": {
      "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed.",
      "type": "array",
      "items": {
       "type": "string"
      },
      "x-kubernetes-patch-strategy": "merge"
     },
     "generateName": {
      "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
      "type": "string"
     },
     "generation": {
      "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "managedFields": {
      "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.ManagedFieldsEntry"
      }
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "ownerReferences": {
      "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.OwnerReference"
      },
      "x-kubernetes-patch-merge-key": "uid",
      "x-kubernetes-patch-strategy": "merge"
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.OwnerReference": {
    "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
    "type": "object",
    "required": [
     "apiVersion",
     "kind",
     "name",
     "uid"
    ],
    "properties": {
     "apiVersion": {
      "description": "API version of the referent.",
      "type": "string"
     },
     "blockOwnerDeletion": {
      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
      "type": "boolean"
     },
     "controller": {
      "description": "If true, this reference points to the managing controller.",
      "type": "boolean"
     },
     "kind": {
      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "uid": {
      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.Patch": {
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
    "type": "object"
   },
   "v1.PersistentVolumeClaimSpec": {
    "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
    "type": "object",
    "properties": {
     "accessModes": {
      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "dataSource": {
      "description": "This field requires the VolumeSnapshotDataSource alpha feature gate to be enabled and currently VolumeSnapshot is the only supported data source. If the provisioner can support VolumeSnapshot data source, it will create a new volume and data will be restored to the volume at the same time. If the provisioner does not support VolumeSnapshot data source, volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.",
      "$ref": "#/definitions/v1.TypedLocalObjectReference"
     },
     "resources": {
      "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "selector": {
      "description": "A label query over volumes to consider for binding.",
      "$ref": "#/definitions/v1.LabelSelector"
     },
     "storageClassName": {
      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
      "type": "string"
     },
     "volumeMode": {
      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.",
      "type": "string"
     },
     "volumeName": {
      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
      "type": "string"
     }
    }
   },
   "v1.Preconditions": {
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "type": "object",
    "properties": {
     "resourceVersion": {
      "description": "Specifies the target ResourceVersion",
      "type": "string"
     },
     "uid": {
      "description": "Specifies the target UID.",
      "type": "string"
     }
    }
   },
   "v1.ResourceRequirements": {
    "description": "ResourceRequirements describes the compute resource requirements.",
    "type": "object",
    "properties": {
     "limits": {
      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     },
     "requests": {
      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/resource.Quantity"
      }
     }
    }
   },
   "v1.RootPaths": {
    "description": "RootPaths lists the paths available at root. For example: \"/healthz\", \"/apis\".",
    "type": "object",
    "required": [
     "paths"
    ],
    "properties": {
     "paths": {
      "description": "paths are the paths available at root.",
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.ServerAddressByClientCIDR": {
    "description": "ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.",
    "type": "object",
    "required": [
     "clientCIDR",
     "serverAddress"
    ],
    "properties": {
     "clientCIDR": {
      "description": "The CIDR with which clients can match their IP to figure out the server address that they should use.",
      "type": "string"
     },
     "serverAddress": {
      "description": "Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.",
      "type": "string"
     }
    }
   },
   "v1.Status": {
    "description": "Status is a return value for calls that don't return other objects.",
    "type": "object",
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "code": {
      "description": "Suggested HTTP return code for this status, 0 if not set.",
      "type": "integer",
      "format": "int32"
     },
     "details": {
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type.",
      "$ref": "#/definitions/v1.StatusDetails"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the status of this operation.",
      "type": "string"
     },
     "metadata": {
      "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "$ref": "#/definitions/v1.ListMeta"
     },
     "reason": {
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it.",
      "type": "string"
     },
     "status": {
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "string"
     }
    }
   },
   "v1.StatusCause": {
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "type": "object",
    "properties": {
     "field": {
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
      "type": "string"
     },
     "message": {
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
      "type": "string"
     },
     "reason": {
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
      "type": "string"
     }
    }
   },
   "v1.StatusDetails": {
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "type": "object",
    "properties": {
     "causes": {
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.StatusCause"
      }
     },
     "group": {
      "description": "The group attribute of the resource associated with the status StatusReason.",
      "type": "string"
     },
     "kind": {
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "name": {
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).",
      "type": "string"
     },
     "retryAfterSeconds": {
      "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.",
      "type": "integer",
      "format": "int32"
     },
     "uid": {
      "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
   "v1.Time": {
    "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
    "type": "string",
    "format": "date-time"
   },
   "v1.TypedLocalObjectReference": {
    "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
    "type": "object",
    "required": [
     "kind",
     "name"
    ],
    "properties": {
     "apiGroup": {
      "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
      "type": "string"
     },
     "kind": {
      "description": "Kind is the type of resource being referenced",
      "type": "string"
     },
     "name": {
      "description": "Name is the name of resource being referenced",
      "type": "string"
     }
    }
   },
   "v1.WatchEvent": {
    "description": "Event represents a single event to a watched resource.",
    "type": "object",
    "required": [
     "type",
     "object"
    ],
    "properties": {
     "object": {
      "description": "Object is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *Status is recommended; other types may make sense\n   depending on context.",
      "$ref": "#/definitions/runtime.RawExtension"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1beta1.CDI": {
    "description": "CDI is the CDI Operator CRD",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "$ref": "#/definitions/v1beta1.CDISpec"
     },
     "status": {
      "$ref": "#/definitions/v1beta1.CDIStatus"
     }
    }
   },
   "v1beta1.CDIConfig": {
    "description": "CDIConfig provides a user configuration for CDI",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "$ref": "#/definitions/v1beta1.CDIConfigSpec"
     },
     "status": {
      "$ref": "#/definitions/v1beta1.CDIConfigStatus"
     }
    }
   },
   "v1beta1.CDIConfigList": {
    "description": "CDIConfigList provides the needed parameters to do request a list of CDIConfigs from the system",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items provides a list of CDIConfigs",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.CDIConfig"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1beta1.CDIConfigSpec": {
    "description": "CDIConfigSpec defines specification for user configuration",
    "type": "object",
    "properties": {
     "featureGates": {
      "description": "FeatureGates are a list of specific enabled feature gates",
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "podResourceRequirements": {
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "scratchSpaceStorageClass": {
      "description": "Override the storage class to used for scratch space during transfer operations. The scratch space storage class is determined in the following order: 1. value of scratchSpaceStorageClass, if that doesn't exist, use the default storage class, if there is no default storage class, use the storage class of the DataVolume, if no storage class specified, use no storage class for scratch space",
      "type": "string"
     },
     "uploadProxyURLOverride": {
      "description": "Override the URL used when uploading to a DataVolume",
      "type": "string"
     }
    }
   },
   "v1beta1.CDIConfigStatus": {
    "description": "CDIConfigStatus provides the most recently observed status of the CDI Config resource",
    "type": "object",
    "nullable": true,
    "properties": {
     "defaultPodResourceRequirements": {
      "$ref": "#/definitions/v1.ResourceRequirements"
     },
     "scratchSpaceStorageClass": {
      "description": "The calculated storage class to be used for scratch space",
      "type": "string"
     },
     "uploadProxyURL": {
      "description": "The calculated upload proxy URL",
      "type": "string"
     }
    }
   },
   "v1beta1.CDIList": {
    "description": "CDIList provides the needed parameters to do request a list of CDIs from the system",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items provides a list of CDIs",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.CDI"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1beta1.CDISpec": {
    "description": "CDISpec defines our specification for the CDI installation",
    "type": "object",
    "properties": {
     "imagePullPolicy": {
      "description": "PullPolicy describes a policy for if/when to pull a container image",
      "type": "string"
     },
     "uninstallStrategy": {
      "type": "string"
     }
    }
   },
   "v1beta1.CDIStatus": {
    "description": "CDIStatus defines the status of the CDI installation",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "description": "A list of current conditions of the CDI resource",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1.Condition"
      }
     },
     "observedVersion": {
      "description": "The observed version of the CDI resource",
      "type": "string"
     },
     "operatorVersion": {
      "description": "The version of the CDI resource as defined by the operator",
      "type": "string"
     },
     "phase": {
      "type": "string"
     },
     "targetVersion": {
      "description": "The desired version of the CDI resource",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolume": {
    "description": "DataVolume is an abstraction on top of PersistentVolumeClaims to allow easy population of those PersistentVolumeClaims with relation to VirtualMachines",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "$ref": "#/definitions/v1beta1.DataVolumeSpec"
     },
     "status": {
      "$ref": "#/definitions/v1beta1.DataVolumeStatus"
     }
    }
   },
   "v1beta1.DataVolumeBlankImage": {
    "description": "DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC",
    "type": "object"
   },
   "v1beta1.DataVolumeCondition": {
    "description": "DataVolumeCondition represents the state of a data volume condition.",
    "type": "object",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "lastHeartbeatTime": {
      "$ref": "#/definitions/v1.Time"
     },
     "lastProbeTime": {
      "type": [
       "string",
       "null"
      ]
     },
     "lastTransitionTime": {
      "type": [
       "string",
       "null"
      ]
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeList": {
    "description": "DataVolumeList provides the needed parameters to do request a list of Data Volumes from the system",
    "type": "object",
    "required": [
     "metadata",
     "items"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "items": {
      "description": "Items provides a list of DataVolumes",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.DataVolume"
      }
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ListMeta"
     }
    }
   },
   "v1beta1.DataVolumeSource": {
    "description": "DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, Registry or an existing PVC",
    "type": "object",
    "properties": {
     "blank": {
      "$ref": "#/definitions/v1beta1.DataVolumeBlankImage"
     },
     "http": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceHTTP"
     },
     "imageio": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceImageIO"
     },
     "pvc": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourcePVC"
     },
     "registry": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceRegistry"
     },
     "s3": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceS3"
     },
     "upload": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceUpload"
     },
     "vddk": {
      "$ref": "#/definitions/v1beta1.DataVolumeSourceVDDK"
     }
    }
   },
   "v1beta1.DataVolumeSourceHTTP": {
    "description": "DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the http(s) endpoint",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceImageIO": {
    "description": "DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source",
    "type": "object",
    "required": [
     "url",
     "diskId"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap provides a reference to the CA cert",
      "type": "string"
     },
     "diskId": {
      "description": "DiskID provides id of a disk to be imported",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the ovirt-engine",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the ovirt-engine",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourcePVC": {
    "description": "DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC",
    "type": "object",
    "required": [
     "namespace",
     "name"
    ],
    "properties": {
     "name": {
      "description": "The name of the source PVC",
      "type": "string"
     },
     "namespace": {
      "description": "The namespace of the source PVC",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceRegistry": {
    "description": "DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "certConfigMap": {
      "description": "CertConfigMap provides a reference to the Registry certs",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the Registry source",
      "type": "string"
     },
     "url": {
      "description": "URL is the url of the Docker registry source",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceS3": {
    "description": "DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source",
    "type": "object",
    "required": [
     "url"
    ],
    "properties": {
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the S3 source",
      "type": "string"
     },
     "url": {
      "description": "URL is the url of the S3 source",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSourceUpload": {
    "description": "DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source",
    "type": "object"
   },
   "v1beta1.DataVolumeSourceVDDK": {
    "description": "DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source",
    "type": "object",
    "properties": {
     "backingFile": {
      "description": "BackingFile is the path to the disk's backing file in the datastore",
      "type": "string"
     },
     "secretRef": {
      "description": "SecretRef provides the secret reference needed to access the vcenter or esxi host",
      "type": "string"
     },
     "thumbprint": {
      "description": "Thumbprint is the certificate thumbprint of the vcenter or esxi host",
      "type": "string"
     },
     "url": {
      "description": "URL is the URL of the vcenter or esxi host",
      "type": "string"
     },
     "uuid": {
      "description": "UUID is the UUID of the virtual machine the disk is attached to",
      "type": "string"
     }
    }
   },
   "v1beta1.DataVolumeSpec": {
    "description": "DataVolumeSpec defines the DataVolume type specification",
    "type": "object",
    "required": [
     "source",
     "pvc"
    ],
    "properties": {
     "contentType": {
      "description": "DataVolumeContentType options: \"kubevirt\", \"archive\"",
      "type": "string"
     },
     "pvc": {
      "description": "PVC is the PVC specification",
      "$ref": "#/definitions/v1.PersistentVolumeClaimSpec"
     },
     "source": {
      "description": "Source is the src of the data for the requested DataVolume",
      "$ref": "#/definitions/v1beta1.DataVolumeSource"
     }
    }
   },
   "v1beta1.DataVolumeStatus": {
    "description": "DataVolumeStatus contains the current status of the DataVolume",
    "type": "object",
    "nullable": true,
    "properties": {
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1beta1.DataVolumeCondition"
      }
     },
     "phase": {
      "description": "Phase is the current phase of the data volume",
      "type": "string"
     },
     "progress": {
      "type": "string"
     },
     "restartCount": {
      "description": "RestartCount is the number of times the pod populating the DataVolume has restarted",
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1beta1.UploadTokenRequest": {
    "description": "UploadTokenRequest is the CR used to initiate a CDI upload",
    "type": "object",
    "required": [
     "spec"
    ],
    "properties": {
     "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
     },
     "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
     },
     "metadata": {
      "$ref": "#/definitions/v1.ObjectMeta"
     },
     "spec": {
      "description": "Spec contains the parameters of the request",
      "$ref": "#/definitions/v1beta1.UploadTokenRequestSpec"
     },
     "status": {
      "description": "Status contains the status of the request",
      "$ref": "#/definitions/v1beta1.UploadTokenRequestStatus"
     }
    }
   },
   "v1beta1.UploadTokenRequestSpec": {
    "description": "UploadTokenRequestSpec defines the parameters of the token request",
    "type": "object",
    "required": [
     "pvcName"
    ],
    "properties": {
     "pvcName": {
      "description": "PvcName is the name of the PVC to upload to",
      "type": "string"
     }
    }
   },
   "v1beta1.UploadTokenRequestStatus": {
    "description": "UploadTokenRequestStatus stores the status of a token request",
    "type": "object",
    "nullable": true,
    "properties": {
     "token": {
      "description": "Token is a JWT token to be inserted in \"Authentication Bearer header\"",
      "type": "string"
     }
    }
   }
  },
  "securityDefinitions": {
   "BearerToken": {
    "description": "Bearer Token authentication",
    "type": "apiKey",
    "name": "authorization",
    "in": "header"
   }
  }
 }
